# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from app.grpc import schema_pb2 as app_dot_grpc_dot_schema__pb2


class MafiaStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PlayerId = channel.unary_unary(
                '/mafia.Mafia/PlayerId',
                request_serializer=app_dot_grpc_dot_schema__pb2.PlayerIdRequest.SerializeToString,
                response_deserializer=app_dot_grpc_dot_schema__pb2.PlayerIdResponse.FromString,
                )
        self.Notifications = channel.stream_stream(
                '/mafia.Mafia/Notifications',
                request_serializer=app_dot_grpc_dot_schema__pb2.NotificationRequest.SerializeToString,
                response_deserializer=app_dot_grpc_dot_schema__pb2.NotificationResponse.FromString,
                )
        self.Connected = channel.stream_stream(
                '/mafia.Mafia/Connected',
                request_serializer=app_dot_grpc_dot_schema__pb2.ConnectionRequest.SerializeToString,
                response_deserializer=app_dot_grpc_dot_schema__pb2.ConnectionResponse.FromString,
                )
        self.ListPlayers = channel.unary_unary(
                '/mafia.Mafia/ListPlayers',
                request_serializer=app_dot_grpc_dot_schema__pb2.ListPlayersRequest.SerializeToString,
                response_deserializer=app_dot_grpc_dot_schema__pb2.ListPlayersResponse.FromString,
                )


class MafiaServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PlayerId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Notifications(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Connected(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPlayers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MafiaServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PlayerId': grpc.unary_unary_rpc_method_handler(
                    servicer.PlayerId,
                    request_deserializer=app_dot_grpc_dot_schema__pb2.PlayerIdRequest.FromString,
                    response_serializer=app_dot_grpc_dot_schema__pb2.PlayerIdResponse.SerializeToString,
            ),
            'Notifications': grpc.stream_stream_rpc_method_handler(
                    servicer.Notifications,
                    request_deserializer=app_dot_grpc_dot_schema__pb2.NotificationRequest.FromString,
                    response_serializer=app_dot_grpc_dot_schema__pb2.NotificationResponse.SerializeToString,
            ),
            'Connected': grpc.stream_stream_rpc_method_handler(
                    servicer.Connected,
                    request_deserializer=app_dot_grpc_dot_schema__pb2.ConnectionRequest.FromString,
                    response_serializer=app_dot_grpc_dot_schema__pb2.ConnectionResponse.SerializeToString,
            ),
            'ListPlayers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPlayers,
                    request_deserializer=app_dot_grpc_dot_schema__pb2.ListPlayersRequest.FromString,
                    response_serializer=app_dot_grpc_dot_schema__pb2.ListPlayersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mafia.Mafia', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mafia(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PlayerId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/PlayerId',
            app_dot_grpc_dot_schema__pb2.PlayerIdRequest.SerializeToString,
            app_dot_grpc_dot_schema__pb2.PlayerIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Notifications(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/mafia.Mafia/Notifications',
            app_dot_grpc_dot_schema__pb2.NotificationRequest.SerializeToString,
            app_dot_grpc_dot_schema__pb2.NotificationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Connected(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/mafia.Mafia/Connected',
            app_dot_grpc_dot_schema__pb2.ConnectionRequest.SerializeToString,
            app_dot_grpc_dot_schema__pb2.ConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPlayers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mafia.Mafia/ListPlayers',
            app_dot_grpc_dot_schema__pb2.ListPlayersRequest.SerializeToString,
            app_dot_grpc_dot_schema__pb2.ListPlayersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
